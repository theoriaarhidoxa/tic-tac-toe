{"version":3,"sources":["components/Settings.js","App.js","index.js"],"names":["Settings","data","onCancel","onSubmit","useState","settingsData","setSettingsData","error","setError","className","onClick","e","preventDefault","type","name","value","onChange","target","length","width","map","el","starter","disabled","App","localStorage","getItem","score","userSettings","setUserSettings","modalVisible","setModalVisible","machineTurn","setMachineTurn","Array","Math","pow","fill","userChoice","machineChoice","animated","i","id","items","setItems","winner","setWinner","reload","setReload","userActionsDisabled","setUserActionsDisabled","split","userScore","machineScore","winningIndexes","size","res","dia1","dia2","count","row","push","getWinningIndexes","deck","useRef","useEffect","w","current","childNodes","clientWidth","forEach","node","style","height","filter","handleWinCheck","setTimeout","handleMachineTurn","free","selectedByMachine","floor","random","item","checkSuccess","every","scoreArr","setItem","join","classList","add","includes","removeItem","window","location","href","ref","handlePlayerTurn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dd5d3f7.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './Settings.scss';\r\n\r\nconst Settings = ({data, onCancel, onSubmit}) => {\r\n\r\n    const [settingsData, setSettingsData] = useState({...data});\r\n    const sizes = [3, 4, 5];\r\n    const [error, setError] = useState(false);\r\n\r\n    const closeEverything = () => {\r\n        onCancel();\r\n    };\r\n\r\n    const sendSomething = e => {\r\n        e.preventDefault();\r\n        onSubmit(settingsData);\r\n        onCancel();\r\n    };\r\n\r\n    const editName = e => {\r\n        const name = e.target.value;\r\n        setError(!name.length);\r\n        setSettingsData({...settingsData, name});\r\n    };\r\n\r\n    const resetData = () => {\r\n        setSettingsData({\r\n            name: 'Player1',\r\n            width: 3,\r\n            starter: 'user',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='overlay' onClick={closeEverything}/>\r\n            <div className='settings'>\r\n                <form className='settings__form' onSubmit={sendSomething}>\r\n                    <div className='settings__form-item'>\r\n                        <label>Ваше имя</label>\r\n                        <input type='text' className={!settingsData.name ? 'error' : ''} value={settingsData.name}\r\n                               onChange={editName}/>\r\n                    </div>\r\n                    <div className='settings__form-item'>\r\n                        <label>Размеры поля</label>\r\n                        <select value={settingsData.width} onChange={e => setSettingsData({...settingsData, width: e.target.value})}>\r\n                            {sizes.map(el => {\r\n                                return (\r\n                                    <option key={el} value={el}>{el}x{el}</option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className='settings__form-item'>\r\n                        <label>Кто начнёт?</label>\r\n                        <select value={settingsData.starter}\r\n                                onChange={e => setSettingsData({...settingsData, starter: e.target.value})}>\r\n                            <option value='user'>{settingsData.name}</option>\r\n                            <option value='AI'>Компьютер</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='settings__form-item'>\r\n                        <input type='button' value='Сбросить' onClick={resetData}/>\r\n                        <input type='submit' value='Сохранить' disabled={error}/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default Settings;\r\n","import './App.scss';\nimport React, {useState, useRef, useEffect} from \"react\";\nimport Settings from \"./components/Settings\";\n\n// todo при build в продакшен css opacity в конце сбрасывается со '100%' на '1', поменять вручную\n\n\nfunction App() {\n    const [userSettings, setUserSettings] = useState({\n        name: localStorage.getItem('tttUserName') ? localStorage.getItem('tttUserName') : 'Player1',\n        width: localStorage.getItem('tttWidth') ? +localStorage.getItem('tttWidth') : 3,\n        starter: localStorage.getItem('tttStarter') ? localStorage.getItem('tttStarter') : 'user',\n        score: localStorage.getItem('tttScore') ? localStorage.getItem('tttScore') : '0:0',\n    });\n\n    const [modalVisible, setModalVisible] = useState(!localStorage.getItem('tttUserName'));\n    const [width] = useState(userSettings.width);\n    const [machineTurn, setMachineTurn] = useState(false);\n    const [items, setItems] = useState(new Array(Math.pow(width, 2)).fill({\n        disabled: false,\n        userChoice: false,\n        machineChoice: false,\n        animated: false\n    }).map((el, i) => {\n        return {...el, id: i};\n    }));\n\n    const [winner, setWinner] = useState('');\n    const [reload, setReload] = useState(false);\n    const [userActionsDisabled, setUserActionsDisabled] = useState(false);\n    const [userScore, machineScore] = userSettings.score.split(':');\n\n\n    const getWinningIndexes = size => {\n        const res = [], dia1 = [0], dia2 = [size - 1];\n        let count = 0;\n\n        while (count < size * size) {\n            const row = [];\n            for (let i = 1; i <= size; i++) {\n                row.push(count + i - 1);\n            }\n            res.push(row);\n            count+=size;\n        }\n\n        count = 0;\n\n        while (count < size) {\n            const row = [];\n            for (let i = 0; i < size * size; i+=size) {\n                row.push(count + i);\n            }\n            res.push(row);\n            count++;\n        }\n\n        for (let i = 0; i < size - 1; i++) {\n            dia1.push(dia1[dia1.length - 1] + size + 1);\n            dia2.push(dia2[dia2.length - 1] + size - 1);\n        }\n        res.push(dia1, dia2);\n        return res;\n    };\n\n\n    const winningIndexes = getWinningIndexes(userSettings.width);\n\n    const deck = useRef([]);\n\n    useEffect(() => {\n        const w = deck.current.childNodes[0].clientWidth;\n        deck.current.childNodes.forEach(node => {\n            node.style.height = w + 'px';\n        });\n    }, []);\n\n    useEffect(() => {\n        if (userSettings.starter === 'AI') {\n            handleWinCheck();\n        } else {\n            if (items.filter(el => !el.userChoice).length < items.length) { // если убрать условие, нолики начнут первыми\n                handleWinCheck();\n            }\n        }\n\n    }, [items]);\n\n    useEffect(() => {\n        if (machineTurn) {\n            setTimeout(() => {\n                handleMachineTurn();\n            }, 500);\n        }\n    }, [machineTurn]);\n\n    const handlePlayerTurn = (e, el) => {\n        if (el.userChoice || el.machineChoice) {\n            return;\n        }\n\n        setUserActionsDisabled(true);\n        setItems(items.map(item => {\n            if (item.id === el.id) {\n                return {...item, userChoice: true, disabled: true};\n            }\n            return item;\n        }));\n    };\n\n    const handleMachineTurn = () => {\n        const free = items.filter(el => !el.disabled).map(el => el.id);\n        const index = Math.floor(Math.random() * free.length), selectedByMachine = free[index];\n\n        setItems(items.map(item => {\n            if (item.id === selectedByMachine) {\n                return {...item, machineChoice: true, disabled: true};\n            }\n            return item;\n        }));\n        setUserActionsDisabled(false);\n    };\n\n    const handleWinCheck = () => {\n        let checkSuccess = [];\n        for (let i = 0; i < winningIndexes.length; i++) {\n            const bunch = winningIndexes[i].map(el => items[el]);\n            if (bunch.every(el => machineTurn ? el.machineChoice : el.userChoice)) {\n                checkSuccess = [...winningIndexes[i]];\n                break;\n            }\n        }\n        if (!checkSuccess.length) {\n            if (items.filter(el => el.disabled).length === items.length) {\n                setTimeout(() => {\n                    setWinner(`Ничья!`);\n                    setReload(true);\n                }, 500);\n            }\n            setMachineTurn(!machineTurn);\n        } else {\n            setTimeout(() => {\n                setWinner(machineTurn ? 'Искусственный интеллект побеждает!' : `${userSettings.name} побеждает!`);\n                const scoreStr = localStorage.getItem('tttScore') ? localStorage.getItem('tttScore') : userSettings.score;\n                const scoreArr = scoreStr.split(':').map(el => +el);\n                if (items[checkSuccess[0]].userChoice) {\n                    scoreArr[0]++;\n                } else {\n                    scoreArr[1]++;\n                }\n                localStorage.setItem('tttScore', scoreArr.join(':'));\n                setReload(true);\n                setUserActionsDisabled(true);\n                deck.current.childNodes.forEach((el, i) => {\n                    el.classList.add(checkSuccess.includes(i) ? 'animated' : 'nonAnimated');\n                });\n            }, 500);\n        }\n    };\n\n    const handleReload = () => {\n        window.location.reload();\n    };\n\n    const handleModalClose = () => {\n        setModalVisible(false);\n    };\n\n    const handleSettingsEdit = value => {\n        const {name, width, starter} = value;\n        localStorage.setItem('tttUserName', name);\n        setUserSettings({...userSettings, name});\n\n        localStorage.setItem('tttWidth', width);\n        setUserSettings({...userSettings, width});\n\n        localStorage.setItem('tttStarter', starter);\n        setUserSettings({...userSettings, starter});\n        window.location.reload();\n    };\n\n    const handleScoreReset = () => {\n        localStorage.removeItem('tttScore');\n        window.location.reload();\n    };\n\n    return (\n        <>\n            <div className='score'>\n                <table>\n                    <tbody>\n                    <tr>\n                        <th><span>{userSettings.name}</span></th>\n                        <th>AI</th>\n                    </tr>\n                    <tr>\n                        <td>{userScore}</td>\n                        <td>{machineScore}</td>\n                    </tr>\n                    </tbody>\n                </table>\n                <button onClick={handleScoreReset}>Обнулить</button>\n            </div>\n            <p>Какое же портфолио без крестиков-ноликов!<br/> На базе этого <a\n                href='http://www.bugi-verstki.ru/projects/tic-tac-toe/ttt.html' target='_blank'>ванильного прототипа</a>.\n            </p>\n            <div ref={deck} className={userActionsDisabled ? 'deck disabled' : 'deck'}>\n                {items.map((el, i) => {\n                    return (\n                        <div onClick={e => handlePlayerTurn(e, el)} key={i} style={{width: 100 / width + '%'}}\n                             className={el.userChoice ? 'deck__cell x' : el.machineChoice ? 'deck__cell o' : el.animated ? 'deck__cell animated' : 'deck__cell'}>\n                            <i/></div>\n                    );\n                })}\n            </div>\n            {reload &&\n            <div className=\"reloadLink\"><h3>{winner}</h3><span onClick={handleReload}>Играть снова</span></div>}\n            <span className='openSettings' onClick={() => setModalVisible(true)}/>\n            {modalVisible && <Settings data={userSettings} onCancel={handleModalClose} onSubmit={handleSettingsEdit}/>}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}